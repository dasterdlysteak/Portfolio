//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EnrolmentClientApp.EnrolmentSystemReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Course", Namespace="http://schemas.datacontract.org/2004/07/StudentEnrolmentSystem")]
    [System.SerializableAttribute()]
    public partial class Course : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime allottedTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal costField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string courseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string courseNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime allottedTime {
            get {
                return this.allottedTimeField;
            }
            set {
                if ((this.allottedTimeField.Equals(value) != true)) {
                    this.allottedTimeField = value;
                    this.RaisePropertyChanged("allottedTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal cost {
            get {
                return this.costField;
            }
            set {
                if ((this.costField.Equals(value) != true)) {
                    this.costField = value;
                    this.RaisePropertyChanged("cost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string courseID {
            get {
                return this.courseIDField;
            }
            set {
                if ((object.ReferenceEquals(this.courseIDField, value) != true)) {
                    this.courseIDField = value;
                    this.RaisePropertyChanged("courseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string courseName {
            get {
                return this.courseNameField;
            }
            set {
                if ((object.ReferenceEquals(this.courseNameField, value) != true)) {
                    this.courseNameField = value;
                    this.RaisePropertyChanged("courseName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Enrolment", Namespace="http://schemas.datacontract.org/2004/07/StudentEnrolmentSystem")]
    [System.SerializableAttribute()]
    public partial class Enrolment : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string courseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string gradeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string studentIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string courseID {
            get {
                return this.courseIDField;
            }
            set {
                if ((object.ReferenceEquals(this.courseIDField, value) != true)) {
                    this.courseIDField = value;
                    this.RaisePropertyChanged("courseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string grade {
            get {
                return this.gradeField;
            }
            set {
                if ((object.ReferenceEquals(this.gradeField, value) != true)) {
                    this.gradeField = value;
                    this.RaisePropertyChanged("grade");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string studentID {
            get {
                return this.studentIDField;
            }
            set {
                if ((object.ReferenceEquals(this.studentIDField, value) != true)) {
                    this.studentIDField = value;
                    this.RaisePropertyChanged("studentID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Student", Namespace="http://schemas.datacontract.org/2004/07/StudentEnrolmentSystem")]
    [System.SerializableAttribute()]
    public partial class Student : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dateEnrolledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string studentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string studentNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime dateEnrolled {
            get {
                return this.dateEnrolledField;
            }
            set {
                if ((this.dateEnrolledField.Equals(value) != true)) {
                    this.dateEnrolledField = value;
                    this.RaisePropertyChanged("dateEnrolled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string studentID {
            get {
                return this.studentIDField;
            }
            set {
                if ((object.ReferenceEquals(this.studentIDField, value) != true)) {
                    this.studentIDField = value;
                    this.RaisePropertyChanged("studentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string studentName {
            get {
                return this.studentNameField;
            }
            set {
                if ((object.ReferenceEquals(this.studentNameField, value) != true)) {
                    this.studentNameField = value;
                    this.RaisePropertyChanged("studentName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="EnrolmentSystemReference.IEnrolmentSystem")]
    public interface IEnrolmentSystem {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnrolmentSystem/addStudent", ReplyAction="http://tempuri.org/IEnrolmentSystem/addStudentResponse")]
        string addStudent(string studentID, string studentName, System.DateTime dateEnrolled);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnrolmentSystem/addStudent", ReplyAction="http://tempuri.org/IEnrolmentSystem/addStudentResponse")]
        System.Threading.Tasks.Task<string> addStudentAsync(string studentID, string studentName, System.DateTime dateEnrolled);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnrolmentSystem/getCoursesForStudent", ReplyAction="http://tempuri.org/IEnrolmentSystem/getCoursesForStudentResponse")]
        EnrolmentClientApp.EnrolmentSystemReference.Course[] getCoursesForStudent(string studentID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnrolmentSystem/getCoursesForStudent", ReplyAction="http://tempuri.org/IEnrolmentSystem/getCoursesForStudentResponse")]
        System.Threading.Tasks.Task<EnrolmentClientApp.EnrolmentSystemReference.Course[]> getCoursesForStudentAsync(string studentID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnrolmentSystem/getEnrolmentForStudent", ReplyAction="http://tempuri.org/IEnrolmentSystem/getEnrolmentForStudentResponse")]
        EnrolmentClientApp.EnrolmentSystemReference.Enrolment[] getEnrolmentForStudent(string studentID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnrolmentSystem/getEnrolmentForStudent", ReplyAction="http://tempuri.org/IEnrolmentSystem/getEnrolmentForStudentResponse")]
        System.Threading.Tasks.Task<EnrolmentClientApp.EnrolmentSystemReference.Enrolment[]> getEnrolmentForStudentAsync(string studentID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnrolmentSystem/viewStudentDetails", ReplyAction="http://tempuri.org/IEnrolmentSystem/viewStudentDetailsResponse")]
        EnrolmentClientApp.EnrolmentSystemReference.Student viewStudentDetails(string studentID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnrolmentSystem/viewStudentDetails", ReplyAction="http://tempuri.org/IEnrolmentSystem/viewStudentDetailsResponse")]
        System.Threading.Tasks.Task<EnrolmentClientApp.EnrolmentSystemReference.Student> viewStudentDetailsAsync(string studentID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnrolmentSystem/addCourse", ReplyAction="http://tempuri.org/IEnrolmentSystem/addCourseResponse")]
        string addCourse(string courseID, string courseName, decimal cost, System.DateTime allottedTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnrolmentSystem/addCourse", ReplyAction="http://tempuri.org/IEnrolmentSystem/addCourseResponse")]
        System.Threading.Tasks.Task<string> addCourseAsync(string courseID, string courseName, decimal cost, System.DateTime allottedTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnrolmentSystem/getStudentsInCourse", ReplyAction="http://tempuri.org/IEnrolmentSystem/getStudentsInCourseResponse")]
        EnrolmentClientApp.EnrolmentSystemReference.Student[] getStudentsInCourse(string courseID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnrolmentSystem/getStudentsInCourse", ReplyAction="http://tempuri.org/IEnrolmentSystem/getStudentsInCourseResponse")]
        System.Threading.Tasks.Task<EnrolmentClientApp.EnrolmentSystemReference.Student[]> getStudentsInCourseAsync(string courseID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnrolmentSystem/viewCourseDetails", ReplyAction="http://tempuri.org/IEnrolmentSystem/viewCourseDetailsResponse")]
        EnrolmentClientApp.EnrolmentSystemReference.Course viewCourseDetails(string courseID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnrolmentSystem/viewCourseDetails", ReplyAction="http://tempuri.org/IEnrolmentSystem/viewCourseDetailsResponse")]
        System.Threading.Tasks.Task<EnrolmentClientApp.EnrolmentSystemReference.Course> viewCourseDetailsAsync(string courseID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnrolmentSystem/getCourses", ReplyAction="http://tempuri.org/IEnrolmentSystem/getCoursesResponse")]
        EnrolmentClientApp.EnrolmentSystemReference.Course[] getCourses();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnrolmentSystem/getCourses", ReplyAction="http://tempuri.org/IEnrolmentSystem/getCoursesResponse")]
        System.Threading.Tasks.Task<EnrolmentClientApp.EnrolmentSystemReference.Course[]> getCoursesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnrolmentSystem/getEnrolmentForCourse", ReplyAction="http://tempuri.org/IEnrolmentSystem/getEnrolmentForCourseResponse")]
        EnrolmentClientApp.EnrolmentSystemReference.Enrolment[] getEnrolmentForCourse(string courseID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnrolmentSystem/getEnrolmentForCourse", ReplyAction="http://tempuri.org/IEnrolmentSystem/getEnrolmentForCourseResponse")]
        System.Threading.Tasks.Task<EnrolmentClientApp.EnrolmentSystemReference.Enrolment[]> getEnrolmentForCourseAsync(string courseID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnrolmentSystem/setGrade", ReplyAction="http://tempuri.org/IEnrolmentSystem/setGradeResponse")]
        string setGrade(string studentID, string courseID, string grade);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnrolmentSystem/setGrade", ReplyAction="http://tempuri.org/IEnrolmentSystem/setGradeResponse")]
        System.Threading.Tasks.Task<string> setGradeAsync(string studentID, string courseID, string grade);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnrolmentSystem/getGrades", ReplyAction="http://tempuri.org/IEnrolmentSystem/getGradesResponse")]
        string[] getGrades(string studentID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnrolmentSystem/getGrades", ReplyAction="http://tempuri.org/IEnrolmentSystem/getGradesResponse")]
        System.Threading.Tasks.Task<string[]> getGradesAsync(string studentID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnrolmentSystem/enrolStudent", ReplyAction="http://tempuri.org/IEnrolmentSystem/enrolStudentResponse")]
        string enrolStudent(string studentID, string courseID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnrolmentSystem/enrolStudent", ReplyAction="http://tempuri.org/IEnrolmentSystem/enrolStudentResponse")]
        System.Threading.Tasks.Task<string> enrolStudentAsync(string studentID, string courseID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnrolmentSystem/getStudents", ReplyAction="http://tempuri.org/IEnrolmentSystem/getStudentsResponse")]
        EnrolmentClientApp.EnrolmentSystemReference.Student[] getStudents();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEnrolmentSystem/getStudents", ReplyAction="http://tempuri.org/IEnrolmentSystem/getStudentsResponse")]
        System.Threading.Tasks.Task<EnrolmentClientApp.EnrolmentSystemReference.Student[]> getStudentsAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IEnrolmentSystemChannel : EnrolmentClientApp.EnrolmentSystemReference.IEnrolmentSystem, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EnrolmentSystemClient : System.ServiceModel.ClientBase<EnrolmentClientApp.EnrolmentSystemReference.IEnrolmentSystem>, EnrolmentClientApp.EnrolmentSystemReference.IEnrolmentSystem {
        
        public EnrolmentSystemClient() {
        }
        
        public EnrolmentSystemClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public EnrolmentSystemClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EnrolmentSystemClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EnrolmentSystemClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string addStudent(string studentID, string studentName, System.DateTime dateEnrolled) {
            return base.Channel.addStudent(studentID, studentName, dateEnrolled);
        }
        
        public System.Threading.Tasks.Task<string> addStudentAsync(string studentID, string studentName, System.DateTime dateEnrolled) {
            return base.Channel.addStudentAsync(studentID, studentName, dateEnrolled);
        }
        
        public EnrolmentClientApp.EnrolmentSystemReference.Course[] getCoursesForStudent(string studentID) {
            return base.Channel.getCoursesForStudent(studentID);
        }
        
        public System.Threading.Tasks.Task<EnrolmentClientApp.EnrolmentSystemReference.Course[]> getCoursesForStudentAsync(string studentID) {
            return base.Channel.getCoursesForStudentAsync(studentID);
        }
        
        public EnrolmentClientApp.EnrolmentSystemReference.Enrolment[] getEnrolmentForStudent(string studentID) {
            return base.Channel.getEnrolmentForStudent(studentID);
        }
        
        public System.Threading.Tasks.Task<EnrolmentClientApp.EnrolmentSystemReference.Enrolment[]> getEnrolmentForStudentAsync(string studentID) {
            return base.Channel.getEnrolmentForStudentAsync(studentID);
        }
        
        public EnrolmentClientApp.EnrolmentSystemReference.Student viewStudentDetails(string studentID) {
            return base.Channel.viewStudentDetails(studentID);
        }
        
        public System.Threading.Tasks.Task<EnrolmentClientApp.EnrolmentSystemReference.Student> viewStudentDetailsAsync(string studentID) {
            return base.Channel.viewStudentDetailsAsync(studentID);
        }
        
        public string addCourse(string courseID, string courseName, decimal cost, System.DateTime allottedTime) {
            return base.Channel.addCourse(courseID, courseName, cost, allottedTime);
        }
        
        public System.Threading.Tasks.Task<string> addCourseAsync(string courseID, string courseName, decimal cost, System.DateTime allottedTime) {
            return base.Channel.addCourseAsync(courseID, courseName, cost, allottedTime);
        }
        
        public EnrolmentClientApp.EnrolmentSystemReference.Student[] getStudentsInCourse(string courseID) {
            return base.Channel.getStudentsInCourse(courseID);
        }
        
        public System.Threading.Tasks.Task<EnrolmentClientApp.EnrolmentSystemReference.Student[]> getStudentsInCourseAsync(string courseID) {
            return base.Channel.getStudentsInCourseAsync(courseID);
        }
        
        public EnrolmentClientApp.EnrolmentSystemReference.Course viewCourseDetails(string courseID) {
            return base.Channel.viewCourseDetails(courseID);
        }
        
        public System.Threading.Tasks.Task<EnrolmentClientApp.EnrolmentSystemReference.Course> viewCourseDetailsAsync(string courseID) {
            return base.Channel.viewCourseDetailsAsync(courseID);
        }
        
        public EnrolmentClientApp.EnrolmentSystemReference.Course[] getCourses() {
            return base.Channel.getCourses();
        }
        
        public System.Threading.Tasks.Task<EnrolmentClientApp.EnrolmentSystemReference.Course[]> getCoursesAsync() {
            return base.Channel.getCoursesAsync();
        }
        
        public EnrolmentClientApp.EnrolmentSystemReference.Enrolment[] getEnrolmentForCourse(string courseID) {
            return base.Channel.getEnrolmentForCourse(courseID);
        }
        
        public System.Threading.Tasks.Task<EnrolmentClientApp.EnrolmentSystemReference.Enrolment[]> getEnrolmentForCourseAsync(string courseID) {
            return base.Channel.getEnrolmentForCourseAsync(courseID);
        }
        
        public string setGrade(string studentID, string courseID, string grade) {
            return base.Channel.setGrade(studentID, courseID, grade);
        }
        
        public System.Threading.Tasks.Task<string> setGradeAsync(string studentID, string courseID, string grade) {
            return base.Channel.setGradeAsync(studentID, courseID, grade);
        }
        
        public string[] getGrades(string studentID) {
            return base.Channel.getGrades(studentID);
        }
        
        public System.Threading.Tasks.Task<string[]> getGradesAsync(string studentID) {
            return base.Channel.getGradesAsync(studentID);
        }
        
        public string enrolStudent(string studentID, string courseID) {
            return base.Channel.enrolStudent(studentID, courseID);
        }
        
        public System.Threading.Tasks.Task<string> enrolStudentAsync(string studentID, string courseID) {
            return base.Channel.enrolStudentAsync(studentID, courseID);
        }
        
        public EnrolmentClientApp.EnrolmentSystemReference.Student[] getStudents() {
            return base.Channel.getStudents();
        }
        
        public System.Threading.Tasks.Task<EnrolmentClientApp.EnrolmentSystemReference.Student[]> getStudentsAsync() {
            return base.Channel.getStudentsAsync();
        }
    }
}
